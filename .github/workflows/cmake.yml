name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04]
      fail-fast: false
    continue-on-error: true

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies (Linux)
      if: ${{ matrix.os != 'windows-latest' }}
      # The virtual environment already has zlib and libpng set up
      run: |
        sudo apt update
        sudo apt -y install libsdl2-dev libsdl2-mixer-dev libsdl2-net-dev

    - name: Install Dependencies (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        curl -O https://www.libsdl.org/release/SDL2-devel-2.0.14-VC.zip
        curl -O https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-2.0.4-VC.zip
        curl -O https://www.libsdl.org/projects/SDL_net/release/SDL2_net-devel-2.0.1-VC.zip
        unzip SDL2-devel-2.0.14-VC.zip
        unzip SDL2_mixer-devel-2.0.4-VC.zip
        unzip SDL2_net-devel-2.0.1-VC.zip

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

    - name: Make package
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: zip doom64ex.zip doom64ex doom64ex.exe doom64ex.pk3

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: doom64ex
        path: ${{github.workspace}}/build/doom64ex.zip
